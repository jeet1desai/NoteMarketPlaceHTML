@model NoteMarketPlace.Models.SearchNoteModel
@{
    ViewBag.Title = "Note - Search Note";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<!-- Head -->
<section id="head">
    <div id="page-head-content">
        <div class="page-text">
            <p>Search Notes</p>
        </div>
    </div>
</section>


<!-- Search and Filter -->
<section id="search-filter">
    <div class="content-box">
        <div class="container">
            <!-- Heading -->
            <div class="row">
                <div class="col-md-12">
                    <div class="title">
                        <p>Search and Filter Notes</p>
                    </div>
                </div>
            </div>
            @using (@Html.BeginForm("Index", "SearchNote", FormMethod.Get, new { id = "SearchForm" }))
            {
                <div class="input-boxes">
                    <!-- Search -->
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group has-search">
                                <span class="fa fa-search form-control-feedback"></span>
                                <input type="text" name="search" class="form-control" id="search" value="@ViewBag.Search" placeholder="Search Notes Here...">
                            </div>
                        </div>
                    </div>
                    <!-- Filter -->
                    <div class="row">
                        <div class="col-lg-2 col-md-4 col-sm-6 fil-item form-group">
                            @Html.DropDownList("type", new SelectList(@ViewBag.TypeList, "ID", "Name"), "Select Type", new { @class = "form-control", id = "type" })
                        </div>
                        <div class="col-lg-2 col-md-4 col-sm-6 fil-item form-group">
                            @Html.DropDownList("category", new SelectList(@ViewBag.CategoryList, "ID", "Name"), "Select Category", new { @class = "form-control", id = "category" })
                        </div>
                        <div class="col-lg-2 col-md-4 col-sm-6 fil-item form-group">
                            @Html.DropDownList("university", new SelectList(@ViewBag.UniversityList), "Select University", new { @class = "form-control", id = "university" })
                        </div>
                        <div class="col-lg-2 col-md-4 col-sm-6 fil-item form-group">
                            @Html.DropDownList("course", new SelectList(@ViewBag.CourseList), "Select Course", new { @class = "form-control", id = "course" })
                        </div>
                        <div class="col-lg-2 col-md-4 col-sm-6 fil-item form-group">
                            @Html.DropDownList("country", new SelectList(@ViewBag.CountryList, "ID", "Name"), "Select Country", new { @class = "form-control", id = "country" })
                        </div>
                        <div class="col-lg-2 col-md-4 col-sm-6 fil-item form-group">
                            @Html.DropDownList("ratings", new SelectList(@ViewBag.RatingList, "Value", "Text"), "Select Rating", new { @class = "form-control", id = "rating" })
                        </div>
                    </div>

                </div>
            }
        </div>
    </div>
</section>


<!-- Notes -->
<section id="notes">
    <div class="container">
        <!-- Heading -->
        <div class="row">
            <div class="col-md-12">
                <div class="title">
                    <p>Totle @ViewBag.TotalNote Notes</p>
                </div>
            </div>
        </div>

        <!-- Note Detail -->
        <div class="">
            <div class="row">
                @{
                    int Avg;
                }

                @foreach (var item in Model.Notes)
                {
                    {
                        Avg = (int)item.SellerNotesReviews.Sum(x => x.Ratings) / (item.SellerNotesReviews.Count == 0 ? 1 : item.SellerNotesReviews.Count);
                    }
                    <div class="col-lg-4 col-md-6">
                        <a class="card card-item" href="@Url.Action("NoteDetail","SearchNote", new { id = item.ID})">
                            <img class="card-img-top" src="@Url.Content(item.DisplayPicture)" alt="Card image cap">
                            <div class="card-body">
                                <h5 class="card-title">@item.Title</h5>
                            </div>
                            <div class="card-footer">
                                <p><i class="fa fa-university"></i>@item.UniversityName, @item.Country1.Name</p>
                                <p><i class="fa fa-book"></i>@item.NumberofPages Pages</p>
                                <p><i class="fa fa-calendar"></i>@Convert.ToString(string.Format("{0:dd/MM/yyyy}", item.ModifiedDate))</p>
                                <p><i class="fa fa-flag-o"></i><span>@item.SellerNotesReportedIssues.Count Users marked this note as inappropriate</span></p>
                                <!-- Note Rating -->
                                <div class="rate">
                                    @for (var i = 1; i <= Avg; i++)
                                    {
                                        <i class="fa fa-star"></i>
                                    }
                                    @for (var i = (Avg + 1); i <= 5; i++)
                                    {
                                        <i class="fa fa-star-o"></i>
                                    }
                                    <p>@item.SellerNotesReviews.Count reviews</p>
                                </div>
                            </div>
                        </a>
                    </div>
                }
            </div>
        </div>

        <!-- PAgination -->
        @if (Model.Pager.TotalPages != 0)
        {
            <div class="row justify-content-center">
                <nav aria-label="...">
                    <ul class="pagination">
                        <li class="page-item">
                            @if (Model.Pager.CurrentPage == 1)
                            {
                                <a class="page-link" href="@Url.Action("Index", new { page = Model.Pager.CurrentPage, search = ViewBag.Search , type = ViewBag.Type, category = ViewBag.Category, university = ViewBag.University, course = ViewBag.Course, country = ViewBag.Country, ratings = ViewBag.Rating})"><i class="fa fa-angle-left"></i></a>
                            }
                            else
                            {
                                <a class="page-link" href="@Url.Action("Index", new { page = Model.Pager.CurrentPage - 1, search = ViewBag.Search , type = ViewBag.Type, category = ViewBag.Category, university = ViewBag.University, course = ViewBag.Course, country = ViewBag.Country, ratings = ViewBag.Rating})"><i class="fa fa-angle-left"></i></a>
                            }
                        </li>


                        @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                        {
                            if (page == Model.Pager.CurrentPage)
                            {
                                <li class="page-item active">
                                    <a class="page-link" href="#">@page<span class="sr-only">(current)</span></a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item">@Html.ActionLink(page.ToString(), "Index", new { page = page, search = ViewBag.Search, type = ViewBag.Type, category = ViewBag.Category, university = ViewBag.University, course = ViewBag.Course, country = ViewBag.Country, ratings = ViewBag.Rating }, new { @class = "page-link" })</li>
                            }
                        }

                        <li class="page-item">
                            @if (Model.Pager.CurrentPage == Model.Pager.EndPage)
                            {
                                <a class="page-link" href="@Url.Action("Index", new { page = Model.Pager.CurrentPage, search = ViewBag.Search , type = ViewBag.Type, category = ViewBag.Category, university = ViewBag.University, course = ViewBag.Course, country = ViewBag.Country, ratings = ViewBag.Rating })"><i class="fa fa-angle-right"></i></a>
                            }
                            else
                            {
                                <a class="page-link" href="@Url.Action("Index", new { page = Model.Pager.CurrentPage + 1, search = ViewBag.Search , type = ViewBag.Type, category = ViewBag.Category, university = ViewBag.University, course = ViewBag.Course, country = ViewBag.Country, ratings = ViewBag.Rating})"><i class="fa fa-angle-right"></i></a>
                            }
                        </li>
                    </ul>
                </nav>
            </div>
        }
    </div>
</section>








