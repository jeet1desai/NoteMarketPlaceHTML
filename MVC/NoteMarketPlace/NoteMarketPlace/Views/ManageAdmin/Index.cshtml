@model IEnumerable<NoteMarketPlace.Models.User>
@using NoteMarketPlace.Models;
@{
    ViewBag.Title = "Note - Manage Admin";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<section id="manage-admin">
    <div class="content-box-top">
        <div class="container">
            <div class="title">
                <p>Manage Administator</p>
            </div>

            <div class="row">
                <div class="col-lg-6 col-md-6 col-sm-6 col-12">
                    <div id="btn-purple">
                        <a class="btn" href="@Url.Action("AddAdmin", "ManageAdmin")" title="Add Administator" role="button">
                            Add
                            Administator
                        </a>
                    </div>
                </div>

                <div class="col-lg-6 col-md-6 col-sm-6 col-12">
                    @using (@Html.BeginForm("Index", "ManageAdmin", FormMethod.Get))
                    {
                        <div class="search-btn">
                            <div class="form-group has-search">
                                <span class="fa fa-search form-control-feedback"></span>
                                <input name="search" type="text" class="form-control" placeholder="Search">
                            </div>
                            <div id="btn-purple">
                                <button type="submit" class="btn">Search</button>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- Table -->
            <div class="table-content table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th>SR NO.</th>
                            <th>@Html.ActionLink("FIRST NAME", "Index", new { sortOrder = ViewBag.FNameSortParm, search = Request.QueryString["search"], maPage = Request.QueryString["maPage"] })</th>
                            <th>@Html.ActionLink("LAST NAME", "Index", new { sortOrder = ViewBag.LNameSortParm, search = Request.QueryString["search"], maPage = Request.QueryString["maPage"] })</th>
                            <th>@Html.ActionLink("EMAIL", "Index", new { sortOrder = ViewBag.EmailSortParm, search = Request.QueryString["search"], maPage = Request.QueryString["maPage"] })</th>
                            <th>@Html.ActionLink("PHONE NO", "Index", new { sortOrder = ViewBag.PhoneSortParm, search = Request.QueryString["search"], maPage = Request.QueryString["maPage"] })</th>
                            <th>@Html.ActionLink("DATE ADDED", "Index", new { sortOrder = ViewBag.DateSortParm, search = Request.QueryString["search"], maPage = Request.QueryString["maPage"] })</th>
                            <th class="text-center">@Html.ActionLink("ACTIVE", "Index", new { sortOrder = ViewBag.ActiveSortParm, search = Request.QueryString["search"], maPage = Request.QueryString["maPage"] })</th>
                            <th>ACTION</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int no = (ViewBag.srno - 1) * 5 + 1;
                        }

                        @if (Model.Count() == 0)
                        {
                            <tr>
                                <td colspan="8" class="text-center">No Record Found</td>
                            </tr>
                        }

                        @foreach (var item in Model)
                        {
                            string phone = "";
                            using (var db = new NoteMarketPlaceEntities())
                            {
                                phone = db.UserProfiles.Where(x => x.UserID == item.ID).FirstOrDefault().PhoneNumber;
                            }
                            <tr>
                                <td>@no</td>
                                <td>@item.FirstName</td>
                                <td>@item.LastName</td>
                                <td>@item.Email</td>
                                <td>@phone</td>
                                <td>@item.CreatedDate</td>
                                @if (item.IsActive)
                                {
                                    <td class="text-center">Yes</td>
                                }
                                else
                                {
                                    <td class="text-center">No</td>
                                }
                                <td>
                                    <div class="search-delete">
                                        <a href="@Url.Action("EditAdmin", "ManageAdmin", new { id = item.ID})"><img src="./images/Dashboard/edit.png" alt="edit"></a>
                                        <a onclick="return confirm('Are you sure you want to to make this administrator inactive?')" href="@Url.Action("InActiveAdmin", "ManageAdmin", new { id = item.ID})"><img src="./images/Dashboard/delete.jpeg" alt="delete"></a>
                                    </div>
                                </td>
                            </tr>
                            no++;
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            @if (ViewBag.TotalAdminPage != 0)
            {
                <div class="row justify-content-center">
                    <nav aria-label="...">
                        <ul class="pagination">
                            <li class="page-item">

                                @if (ViewBag.currentPage == 1)
                                {
                                    <a class="page-link" href="@Url.Action("Index", new { maPage = @ViewBag.currentPage, sortOrder = Request.QueryString["sortOrder"], search = Request.QueryString["search"] })"><i class="fa fa-angle-left"></i></a>
                                }
                                else
                                {
                                    <a class="page-link" href="@Url.Action("Index", new { maPage = @ViewBag.currentPage - 1, sortOrder = Request.QueryString["sortOrder"], search = Request.QueryString["search"] })"><i class="fa fa-angle-left"></i></a>
                                }
                            </li>
                            @{

                                for (int i = ViewBag.startPage; i <= ViewBag.endPage; i++)
                                {
                                    if (i == ViewBag.currentPage)
                                    {
                                        <li class="page-item active">
                                            <a class="page-link" href="#">@i<span class="sr-only">(current)</span></a>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="page-item">@Html.ActionLink(i.ToString(), "Index", new { maPage = i, sortOrder = Request.QueryString["sortOrder"], search = Request.QueryString["search"] }, new { @class = "page-link" })</li>
                                    }
                                }
                            }
                            <li class="page-item">
                                @if (ViewBag.currentPage == ViewBag.endPage)
                                {
                                    <a class="page-link" href="@Url.Action("Index", new { maPage = @ViewBag.currentPage, sortOrder = Request.QueryString["sortOrder"], search = Request.QueryString["search"] })"><i class="fa fa-angle-right"></i></a>
                                }
                                else
                                {
                                    <a class="page-link" href="@Url.Action("Index", new { maPage = @ViewBag.currentPage + 1, sortOrder = Request.QueryString["sortOrder"], search = Request.QueryString["search"] })"><i class="fa fa-angle-right"></i></a>
                                }
                            </li>
                        </ul>
                    </nav>
                </div>

            }

        </div>
    </div>

</section>

